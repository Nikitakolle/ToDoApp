@model ToDoApp.Models.ToDo

@{
    ViewData["Title"] = "Create Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="crud-page">
    <div class="crud-container">
<h2>Create New Task</h2>
<hr />

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <strong>ModelState is invalid:</strong>
        <ul>
            @foreach (var modelState in ViewData.ModelState)
            {
                foreach (var error in modelState.Value.Errors)
                {
                    <li><strong>@modelState.Key</strong>: @error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-3">
                <label asp-for="Title" class="form-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </form>
    </div>
</div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
